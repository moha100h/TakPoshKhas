version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: tekpush_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-your_secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - tekpush_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d tekpush_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://app_user:${DB_PASSWORD:-your_secure_password}@postgres:5432/tekpush_db
      SESSION_SECRET: ${SESSION_SECRET:-change-this-to-a-secure-random-string}
      PORT: 5000
    ports:
      - "5000:5000"
    volumes:
      - ./public/uploads:/app/public/uploads
      - app_logs:/app/logs
    networks:
      - tekpush_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  app_logs:

networks:
  tekpush_network:
    driver: bridge